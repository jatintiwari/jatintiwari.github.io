import{S as e,i as a,s as n,e as t,a as s,w as o,b as i,f as r,d as g,x as c,q as l,v as p,h as d,y as m,n as h}from"./vendor-87ac4347.js";import{B as u,a as f}from"./common-880a321a.js";function $(e){let a;return{c(){a=t("h1"),a.innerHTML='Create rounded images with <a target="_blank" href="https://imagemagick.org/script/download.php">Imagemagick</a>'},m(e,n){g(e,a,n)},p:h,d(e){e&&d(a)}}}function x(e){let a,n,h,x,v,b,k,_,T,w,M,H,L,C,y,j,z,I,J,G,S,A,E,P,U,W,q,B,D,F,N,O,X,Y,K,Q,R,V,Z,ee,ae,ne,te,se,oe,ie,re,ge,ce,le,pe,de,me,he,ue;return h=new u({props:{date:"22 June 2022",$$slots:{default:[$]},$$scope:{ctx:e}}}),w=new f({props:{rounded:!0,height:"200",src:"https://user-images.githubusercontent.com/10477804/174970872-f986f767-8642-4873-a905-9b692454afdb.png",desc:"Masked image will saved to the file system."}}),E=new f({props:{rounded:!0,height:"300",src:"https://user-images.githubusercontent.com/10477804/174964643-ed9dfa2f-106b-4fed-8a01-874dd38668a5.png",desc:"Above created mask will be used as frame to crop extra part of original image. This image will be the size of original image and that is why the above image is pushing this down."}}),F=new f({props:{rounded:!0,height:"220",src:"https://user-images.githubusercontent.com/10477804/175003161-0d5a4926-c371-40d2-aa4e-3d7803108067.png"}}),{c(){a=t("date"),a.textContent="22 June 2022",n=s(),o(h.$$.fragment),x=s(),v=t("h4"),v.textContent="Create a mask",b=s(),k=t("pre"),_=s(),T=t("div"),o(w.$$.fragment),M=s(),H=t("p"),H.innerHTML="<code>-size 300x300</code> is the size of created image.",L=s(),C=t("p"),C.innerHTML="<code>300,300</code> refers to width and height of the image. This has to be adjusted according the image. That is the mask has to be the size of the original_image.",y=s(),j=t("p"),j.innerHTML="<code>150,150</code> refers to the border radius of the mask. It determines the curves of the edges.",z=s(),I=t("h4"),I.textContent="Apply the mask",J=s(),G=t("pre"),S=s(),A=t("div"),o(E.$$.fragment),P=s(),U=t("h4"),U.textContent="Crop the Image",W=s(),q=t("pre"),B=s(),D=t("div"),o(F.$$.fragment),N=s(),O=t("hr"),X=s(),Y=t("h4"),Y.textContent="Other Useful commands",K=s(),Q=t("ul"),R=t("li"),V=t("p"),V.innerHTML="<em>Crop image using directions</em> Use directions to crop part of an image.",Z=s(),ee=t("pre"),ae=s(),ne=t("li"),te=t("p"),te.innerHTML="<em>Crop image using origin</em> in order of <em>width</em> x <em>height</em> + <em>originX</em> + <em>originY</em>",se=s(),oe=t("pre"),ie=s(),re=t("li"),ge=t("p"),ge.innerHTML="<em>Compress image</em>",ce=s(),le=t("pre"),pe=s(),de=t("h4"),de.textContent="Good to have",me=s(),he=t("ul"),he.innerHTML="<li>Size of the original image should be enough to create rounded borders</li> \n<li>Focus content of the image ideally should be in center of image as the edges will be cropped.</li>",document.title="Crop edges to create a round image",i(k,"class","language-shell"),i(T,"align","center"),i(G,"class","language-bash"),i(A,"align","center"),i(q,"class","language-shell"),i(D,"align","center"),i(ee,"class","language-shell"),i(oe,"class","language-shell"),i(le,"class","language-shell")},m(e,t){r(document.head,a),g(e,n,t),c(h,e,t),g(e,x,t),g(e,v,t),g(e,b,t),g(e,k,t),k.innerHTML='<code class="language-shell">convert -size 300x300 xc:none -draw <span class="token string">"roundrectangle 0,0,300,300,150,150"</span> mask.png</code>',g(e,_,t),g(e,T,t),c(w,T,null),g(e,M,t),g(e,H,t),g(e,L,t),g(e,C,t),g(e,y,t),g(e,j,t),g(e,z,t),g(e,I,t),g(e,J,t),g(e,G,t),G.innerHTML='<code class="language-bash">convert original_image.png -matte mask.png <span class="token punctuation"></span>\n  -compose DstIn -composite rounded_original_image.png</code>',g(e,S,t),g(e,A,t),c(E,A,null),g(e,P,t),g(e,U,t),g(e,W,t),g(e,q,t),q.innerHTML='<code class="language-shell">convert rounded_original_image.png -crop 300x300 rounded_original_image.png</code>',g(e,B,t),g(e,D,t),c(F,D,null),g(e,N,t),g(e,O,t),g(e,X,t),g(e,Y,t),g(e,K,t),g(e,Q,t),r(Q,R),r(R,V),r(R,Z),r(R,ee),ee.innerHTML='<code class="language-shell">convert original_image.jpg -gravity East -chop 1000x0 chopped_image.jpg\nconvert original_image.jpg -gravity West -chop 1000x0 chopped_image.jpg\nconvert original_image.jpg -gravity South -chop 0x1000 <span class="token punctuation"></span>\n-gravity West -chop 1000x0 <span class="token punctuation"></span>\n-gravity East -chop 1000x0 <span class="token punctuation"></span>\n-gravity North -chop 0x200 <span class="token punctuation"></span>\nchopped_image.jpg&#96;</code>',r(Q,ae),r(Q,ne),r(ne,te),r(ne,se),r(ne,oe),oe.innerHTML='<code class="language-shell">convert original_image.jpg -crop 1280x1280+500+125 chopped_image.jpg</code>',r(Q,ie),r(Q,re),r(re,ge),r(re,ce),r(re,le),le.innerHTML='<code class="language-shell">magick original_image.JPG -resize <span class="token number">40</span>% chopped_image.JPG</code>',g(e,pe,t),g(e,de,t),g(e,me,t),g(e,he,t),ue=!0},p(e,[a]){const n={};1&a&&(n.$$scope={dirty:a,ctx:e}),h.$set(n)},i(e){ue||(l(h.$$.fragment,e),l(w.$$.fragment,e),l(E.$$.fragment,e),l(F.$$.fragment,e),ue=!0)},o(e){p(h.$$.fragment,e),p(w.$$.fragment,e),p(E.$$.fragment,e),p(F.$$.fragment,e),ue=!1},d(e){d(a),e&&d(n),m(h,e),e&&d(x),e&&d(v),e&&d(b),e&&d(k),e&&d(_),e&&d(T),m(w),e&&d(M),e&&d(H),e&&d(L),e&&d(C),e&&d(y),e&&d(j),e&&d(z),e&&d(I),e&&d(J),e&&d(G),e&&d(S),e&&d(A),m(E),e&&d(P),e&&d(U),e&&d(W),e&&d(q),e&&d(B),e&&d(D),m(F),e&&d(N),e&&d(O),e&&d(X),e&&d(Y),e&&d(K),e&&d(Q),e&&d(pe),e&&d(de),e&&d(me),e&&d(he)}}}class v extends e{constructor(e){super(),a(this,e,null,x,n,{})}}export{v as default};
